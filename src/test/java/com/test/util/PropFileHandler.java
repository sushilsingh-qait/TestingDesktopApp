/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.test.util;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.util.Properties;

/**
 * 
 * @author QA InfoTech
 * This class defines the methods required to perform IO tasks on the "filename.properties" file.
 * filename.properties is the default file which stores data which either is required by the
 * application or is generated by the application at the runtime.
 * 
 */

public class PropFileHandler {    
 static Properties properties = new Properties();

 /**
  * This method is used to read the value of the given property from the properties file.
  * 
  * @param property : the property whose value is to be fetched.
  * @return the value of the given property.
  */
 
 public static String readProperty(String property) 
 {
  InputStream inPropFile = null;
  try {
   inPropFile = new FileInputStream("data/filename.properties");
   properties.load(inPropFile);
  
  } catch (IOException e) {
  }
  String value=properties.getProperty(property); 
  
  return value;
 }

 /**
  * This method is used to store a new property in the properties file.
  * 
  * @param property : name for the new property.
  * @param value : value for the new property.
  * @throws IOException
  */
 public static void writeProperty(String property, String value) throws IOException {
  // Write properties file.
   //OutputStream outPropFile = null;

  try {
   InputStream inPropFile = new FileInputStream("data/filename.properties");
   properties.load(inPropFile);
   inPropFile.close();
   OutputStream outPropFile = new FileOutputStream("data/filename.properties");
   properties.setProperty(property,value);
   properties.store(outPropFile, null);
   outPropFile.close();
  } catch (IOException e) {
  }
 }
}